{"ast":null,"code":"String.prototype.trim = function () {\n  return this.replace(/(^\\s*)|(\\s*$)/gi, \"\");\n};\n\n/*******************************************************************************\n * FUNCTION 명 : validateNumber() FUNCTION 기능설명 : input Field 에 키를 입력 할때, Number만\n * 입력되로록 함\n ******************************************************************************/\nfunction fnValidateNumber(evt) {\n  //window.event = IE\n  //evt.which  = 파폭 크롬등\n  //jquery 쓰면 다 상관없음\n  var code = evt.keyCode;\n  if (code > 34 && code < 41 || code > 47 && code < 58 || code > 95 && code < 106 || code == 8 || code == 9 || code == 13 || code == 46) {\n    return;\n  }\n  //window.event.returnValeu = false;\n  evt.preventDefault();\n}\n\n//여백제거\nconst trim = function (str) {\n  str = str.replace(/(^\\s*)|(\\s*$)/gi, \"\");\n  return str;\n};\n\n/*******************************************************************************\n * FUNCTION 명 : 값의 타입을 체크\n * 사용 방법 :\n * \tTypeChecker.number(\"1234\"); --> true\n *  TypeChecker.number(\"abcd\"); --> false\n ******************************************************************************/\nconst TypeChecker = function () {\n  var alpha = /[^a-zA-Z]/;\n  var prgoramUrl = /[^a-zA-Z0-9.&=?\\/]/;\n  var number = /^-?[0-9]+(,[0-9]+)?(\\.[0-9]+)?$/;\n  var email = /^(\\w+)([-+.][\\w]+)*@(\\w[-\\w]*\\.){1,5}([A-Za-z]){2,4}$/;\n  var url = /(((https?)|(ftp)):\\/\\/([\\-\\w]+\\.)+\\w{2,3}(\\/[%\\-\\w]+(\\.\\w{2,})?)*(([\\w\\-\\.\\?\\\\\\/+@&#;`~=%!]*)(\\.\\w{2,})?)*\\/?)/i;\n  var date = /^[0-9]{4}(-|\\.)?[0-9]{2}(-|\\.)?[0-3][0-9]$/;\n  //var stdTm = /^[0-9]{4}(-|\\.)?[0-9]{2}(-|\\.)?[0-3][0-9].[0-2][0-9].[0-5][0-9]$/;\n  var year = /^[0-9]{4}$/;\n  var ipAddress = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n  var alphanum = /[^a-zA-Z0-9]/;\n  var roldeCode = /[^a-zA-Z0-9_]/;\n  var phone = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n  var usrid = /[^a-z0-9]/; //I\n  var bannerUrl = /(((https?)|(ftp)):\\/\\/([\\-\\w]+\\.)+\\w{2,3}(\\/[%\\-\\w]+(\\.\\w{2,})?)*(([\\w\\-\\.\\?\\\\\\/+@&#;`~=%!]*)(\\.\\w{2,})?)*\\/?)/i;\n  var boardInfoId = /[^a-z]/;\n  var korEng = /^[ㄱ-ㅎ|가-힣|a-z|A-Z]+$/;\n  var programUrl = /^\\/[\\w]+\\/[arwz]\\/[tnm]\\/[\\w]+\\.do$/;\n  return {\n    usrid: function (v) {\n      if (v.trim() == \"\") return true;\n      return !usrid.test(v);\n    },\n    usridText: \"영문 소문자및, 숫자만 사용할 수 있습니다.\",\n    prgoramUrl: function (v) {\n      if (v.trim() == \"\") return true;\n      return !prgoramUrl.test(v);\n    },\n    prgoramUrlText: \"개발 프로그램용 소스URL 형태만 가능합니다.\\n(/변수명/권한/메뉴구분/*.do)\",\n    roldeCode: function (v) {\n      if (v.trim() == \"\") return true;\n      return !roldeCode.test(v);\n    },\n    roldeCodeText: \"영문, 숫자 및 _기호만 가능합니다\",\n    required: function (v) {\n      return v.trim() != \"\";\n    },\n    requiredText: \"반드시 입력해야 합니다.\",\n    email: function (v) {\n      if (v.trim() == \"\") return true;\n      return email.test(v);\n    },\n    emailText: \"Email 형식만 가능합니다. 예)user@example.com\",\n    emailMask: /[a-z0-9_\\.\\-@]/i,\n    url: function (v) {\n      if (v.trim() == \"\") return true;\n      return url.test(v);\n    },\n    urlText: \"URL 형식만 가능합니다. 예)http://www.example.com\",\n    alpha: function (v) {\n      if (v.trim() == \"\") return true;\n      return !alpha.test(v);\n    },\n    alphaText: \"알파벳만 가능합니다.\",\n    alphaMask: /[a-z_]/i,\n    alphanum: function (v) {\n      if (v.trim() == \"\") return true;\n      return !alphanum.test(v);\n    },\n    alphanumText: \"알파벳과 숫자만 가능합니다.\",\n    alphanumMask: /[a-z0-9_]/i,\n    number: function (v) {\n      if (v.trim() == \"\") return true;\n      return number.test(v);\n    },\n    numberText: \"숫자만 가능합니다.\",\n    numberMask: /^-?[0-9]+,?[0-9]+\\.?[0-9]+$/i,\n    date: function (v) {\n      if (v.trim() == \"\") return true;\n      return date.test(v);\n    },\n    dateText: \"날짜만 가능합니다. 예)2009.01.01\",\n    dateMask: /^[0-9]{4}(-|\\.)?[0-9]{2}(-|\\.)?[0-3][0-9]$/,\n    year: function (v) {\n      if (v.trim() == \"\") return true;\n      return year.test(v);\n    },\n    yearText: \"년도만 가능합니다. 예)2010\",\n    yearMask: /^[0-9]{4}$/,\n    ipAddress: function (v) {\n      if (v.trim() == \"\") return true;\n      return ipAddress.test(v);\n    },\n    ipText: \"IP주소만 가능합니다.\",\n    ipMask: /[\\d\\.]/i,\n    phone: function (v) {\n      if (v.trim() == \"\") return true;\n      return phone.test(v);\n    },\n    phoneText: \"핸드폰 형식만 가능합니다.\",\n    bannerUrl: function (v) {\n      if (v.trim() == \"\") return true;\n      return bannerUrl.test(v);\n    },\n    bannerUrlText: \"URL 형태만 가능합니다. 예)http://www.example.com\",\n    boardInfoId: function (v) {\n      if (v.trim() == \"\") return true;\n      return !boardInfoId.test(v);\n    },\n    boardInfoIdText: \"영문소문자만 가능합니다.\",\n    korEng: function (v) {\n      if (v.trim() == \"\") return true;\n      return korEng.test(v);\n    },\n    korEngText: \"한글 영문만 사용할 수 있습니다.\",\n    programUrl: function (v) {\n      if (v.trim() == \"\") {\n        return true;\n      }\n      return programUrl.test(v);\n    },\n    programUrlText: \"개발 프로그램용 소스URL 형태만 가능합니다.\\n- /변수명/권한/메뉴구분/*.do\\n- 변수명: 알파벳 및 숫자\\n- 권한: a, r, w, z\\n- 메뉴구분: m, n, t\"\n  };\n}();","map":{"version":3,"names":["String","prototype","trim","replace","fnValidateNumber","evt","code","keyCode","preventDefault","str","TypeChecker","alpha","prgoramUrl","number","email","url","date","year","ipAddress","alphanum","roldeCode","phone","usrid","bannerUrl","boardInfoId","korEng","programUrl","v","test","usridText","prgoramUrlText","roldeCodeText","required","requiredText","emailText","emailMask","urlText","alphaText","alphaMask","alphanumText","alphanumMask","numberText","numberMask","dateText","dateMask","yearText","yearMask","ipText","ipMask","phoneText","bannerUrlText","boardInfoIdText","korEngText","programUrlText"],"sources":["/Users/hoseok.shin/Desktop/project/react/basic/src/contents/js/validation.js"],"sourcesContent":["String.prototype.trim = function () {\n  return this.replace(/(^\\s*)|(\\s*$)/gi, \"\");\n};\n\n/*******************************************************************************\n * FUNCTION 명 : validateNumber() FUNCTION 기능설명 : input Field 에 키를 입력 할때, Number만\n * 입력되로록 함\n ******************************************************************************/\nfunction fnValidateNumber(evt) {\n  //window.event = IE\n  //evt.which  = 파폭 크롬등\n  //jquery 쓰면 다 상관없음\n  var code = evt.keyCode;\n\n  if (\n    (code > 34 && code < 41) ||\n    (code > 47 && code < 58) ||\n    (code > 95 && code < 106) ||\n    code == 8 ||\n    code == 9 ||\n    code == 13 ||\n    code == 46\n  ) {\n    return;\n  }\n  //window.event.returnValeu = false;\n  evt.preventDefault();\n}\n\n//여백제거\nconst trim = function (str) {\n  str = str.replace(/(^\\s*)|(\\s*$)/gi, \"\");\n  return str;\n};\n\n/*******************************************************************************\n * FUNCTION 명 : 값의 타입을 체크\n * 사용 방법 :\n * \tTypeChecker.number(\"1234\"); --> true\n *  TypeChecker.number(\"abcd\"); --> false\n ******************************************************************************/\nconst TypeChecker = (function () {\n  var alpha = /[^a-zA-Z]/;\n  var prgoramUrl = /[^a-zA-Z0-9.&=?\\/]/;\n  var number = /^-?[0-9]+(,[0-9]+)?(\\.[0-9]+)?$/;\n  var email = /^(\\w+)([-+.][\\w]+)*@(\\w[-\\w]*\\.){1,5}([A-Za-z]){2,4}$/;\n  var url =\n    /(((https?)|(ftp)):\\/\\/([\\-\\w]+\\.)+\\w{2,3}(\\/[%\\-\\w]+(\\.\\w{2,})?)*(([\\w\\-\\.\\?\\\\\\/+@&#;`~=%!]*)(\\.\\w{2,})?)*\\/?)/i;\n  var date = /^[0-9]{4}(-|\\.)?[0-9]{2}(-|\\.)?[0-3][0-9]$/;\n  //var stdTm = /^[0-9]{4}(-|\\.)?[0-9]{2}(-|\\.)?[0-3][0-9].[0-2][0-9].[0-5][0-9]$/;\n  var year = /^[0-9]{4}$/;\n  var ipAddress = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n  var alphanum = /[^a-zA-Z0-9]/;\n  var roldeCode = /[^a-zA-Z0-9_]/;\n  var phone = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n  var usrid = /[^a-z0-9]/; //I\n  var bannerUrl =\n    /(((https?)|(ftp)):\\/\\/([\\-\\w]+\\.)+\\w{2,3}(\\/[%\\-\\w]+(\\.\\w{2,})?)*(([\\w\\-\\.\\?\\\\\\/+@&#;`~=%!]*)(\\.\\w{2,})?)*\\/?)/i;\n  var boardInfoId = /[^a-z]/;\n  var korEng = /^[ㄱ-ㅎ|가-힣|a-z|A-Z]+$/;\n  var programUrl = /^\\/[\\w]+\\/[arwz]\\/[tnm]\\/[\\w]+\\.do$/;\n\n  return {\n    usrid: function (v) {\n      if (v.trim() == \"\") return true;\n      return !usrid.test(v);\n    },\n    usridText: \"영문 소문자및, 숫자만 사용할 수 있습니다.\",\n\n    prgoramUrl: function (v) {\n      if (v.trim() == \"\") return true;\n      return !prgoramUrl.test(v);\n    },\n    prgoramUrlText:\n      \"개발 프로그램용 소스URL 형태만 가능합니다.\\n(/변수명/권한/메뉴구분/*.do)\",\n\n    roldeCode: function (v) {\n      if (v.trim() == \"\") return true;\n      return !roldeCode.test(v);\n    },\n    roldeCodeText: \"영문, 숫자 및 _기호만 가능합니다\",\n\n    required: function (v) {\n      return v.trim() != \"\";\n    },\n    requiredText: \"반드시 입력해야 합니다.\",\n\n    email: function (v) {\n      if (v.trim() == \"\") return true;\n      return email.test(v);\n    },\n    emailText: \"Email 형식만 가능합니다. 예)user@example.com\",\n    emailMask: /[a-z0-9_\\.\\-@]/i,\n\n    url: function (v) {\n      if (v.trim() == \"\") return true;\n      return url.test(v);\n    },\n    urlText: \"URL 형식만 가능합니다. 예)http://www.example.com\",\n\n    alpha: function (v) {\n      if (v.trim() == \"\") return true;\n      return !alpha.test(v);\n    },\n    alphaText: \"알파벳만 가능합니다.\",\n    alphaMask: /[a-z_]/i,\n\n    alphanum: function (v) {\n      if (v.trim() == \"\") return true;\n      return !alphanum.test(v);\n    },\n    alphanumText: \"알파벳과 숫자만 가능합니다.\",\n    alphanumMask: /[a-z0-9_]/i,\n\n    number: function (v) {\n      if (v.trim() == \"\") return true;\n      return number.test(v);\n    },\n    numberText: \"숫자만 가능합니다.\",\n    numberMask: /^-?[0-9]+,?[0-9]+\\.?[0-9]+$/i,\n\n    date: function (v) {\n      if (v.trim() == \"\") return true;\n      return date.test(v);\n    },\n    dateText: \"날짜만 가능합니다. 예)2009.01.01\",\n    dateMask: /^[0-9]{4}(-|\\.)?[0-9]{2}(-|\\.)?[0-3][0-9]$/,\n\n    year: function (v) {\n      if (v.trim() == \"\") return true;\n      return year.test(v);\n    },\n    yearText: \"년도만 가능합니다. 예)2010\",\n    yearMask: /^[0-9]{4}$/,\n\n    ipAddress: function (v) {\n      if (v.trim() == \"\") return true;\n      return ipAddress.test(v);\n    },\n    ipText: \"IP주소만 가능합니다.\",\n    ipMask: /[\\d\\.]/i,\n\n    phone: function (v) {\n      if (v.trim() == \"\") return true;\n      return phone.test(v);\n    },\n    phoneText: \"핸드폰 형식만 가능합니다.\",\n\n    bannerUrl: function (v) {\n      if (v.trim() == \"\") return true;\n      return bannerUrl.test(v);\n    },\n    bannerUrlText: \"URL 형태만 가능합니다. 예)http://www.example.com\",\n\n    boardInfoId: function (v) {\n      if (v.trim() == \"\") return true;\n      return !boardInfoId.test(v);\n    },\n    boardInfoIdText: \"영문소문자만 가능합니다.\",\n\n    korEng: function (v) {\n      if (v.trim() == \"\") return true;\n      return korEng.test(v);\n    },\n    korEngText: \"한글 영문만 사용할 수 있습니다.\",\n\n    programUrl: function (v) {\n      if (v.trim() == \"\") {\n        return true;\n      }\n      return programUrl.test(v);\n    },\n    programUrlText:\n      \"개발 프로그램용 소스URL 형태만 가능합니다.\\n- /변수명/권한/메뉴구분/*.do\\n- 변수명: 알파벳 및 숫자\\n- 권한: a, r, w, z\\n- 메뉴구분: m, n, t\",\n  };\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}